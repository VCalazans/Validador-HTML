/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho1.view;

import trabalho1.view.table.ValidadorHTMLTableModel;
import trabalho1.view.table.ValidadorErrosCellRender;
import trabalho1.view.table.ValidadorHTMLCellRender;
import trabalho1.view.table.ValidadorTableModel;
import trabalho1.view.table.ValidadorErrosTableModel;
import trabalho1.view.table.ValidadorCellRender;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.EventObject;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.CellEditorListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.text.Caret;
import trabalho1.model.Compilador;
import trabalho1.model.ListaEncadeada;
import trabalho1.model.NoLista;
import trabalho1.model.Ocorrencia;
import trabalho1.model.SituacaoAnalise;
import trabalho1.model.TagEncontrada;
import trabalho1.view.table.ValidadorArquivosCellRender;
import trabalho1.view.table.ValidadorArquivosTable;

/**
 *
 * @authors William Mello e Victor Calazans
 */
public class ValidadorHTML extends javax.swing.JFrame {

    /**
     * Creates new form ValidadorHTML
     */
    public ValidadorHTML() {
        initComponents();

    }

    private ListaEncadeada<File> listFile = new ListaEncadeada<>(); //Array com os Arquivos para Serem Validados
    private ArrayList<File> arrFiles = new ArrayList<>();
    private Compilador comp;
    private Ocorrencia[] ocorrencias;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbArquivos = new javax.swing.JTable();
        jtbErros = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbTabErros = new javax.swing.JTable();
        lbDescErro = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHtml = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btValidarArquivo = new javax.swing.JButton();
        btSelArquivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tbArquivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbArquivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbArquivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbArquivos);

        tbTabErros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(tbTabErros);

        jLabel2.setText("Caso linha 0: Não foi possível indentificar a linha do erro!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDescErro)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDescErro)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jtbErros.addTab("Erros", jPanel1);

        tbHtml.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbHtml);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1281, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtbErros.addTab("HTML", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("VALIDADOR"));

        btValidarArquivo.setText("Validar");
        btValidarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btValidarArquivoActionPerformed(evt);
            }
        });

        btSelArquivo.setText("Selecionar Arquivo ");
        btSelArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelArquivoActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/HTML.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btValidarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSelArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btValidarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSelArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtbErros)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtbErros, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setLocationRelativeTo(null); // Centraliza o JFrame
    }//GEN-LAST:event_formWindowActivated

    /**
     * Cria instância do componente para selecionar os arquivos, e filtra por
     * arquivos HTML.
     *
     * @param evt
     */
    private void btSelArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelArquivoActionPerformed
        //Componente para explorar arquivos.
        JFileChooser fChooser = new JFileChooser();
        fChooser.setDialogTitle("Procurar Músicas.");
        //Apenas para leitura.
        fChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Filtra o tipo de arquivo a ser buscado pelo explorador.
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos", "html");
        fChooser.setFileFilter(filter);
        int ret = fChooser.showOpenDialog(this);
        //Adiciona na tabela o arquivo selecionado.
        if (ret == JFileChooser.APPROVE_OPTION) {
            NoLista<File> f = new NoLista<File>();
            f.setInfo(fChooser.getSelectedFile());
            if (listFile.buscar(f.getInfo()) != null) {
                JOptionPane.showMessageDialog(this, "Este arquivo já está incluso na lista!", "Aviso", JOptionPane.WARNING_MESSAGE);
                return;
            }

            arrFiles.add(fChooser.getSelectedFile());
            listFile.inserir(f.getInfo());
        }

        incializarTabela(listFile);

    }//GEN-LAST:event_btSelArquivoActionPerformed

    private void btValidarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btValidarArquivoActionPerformed

        int linhaSelecionada = tbArquivos.getSelectedRow();
        getArquivoSelecionado(linhaSelecionada);
        comp.analisarArquivo();
        ocorrencias = comp.getOcorrencias();
        TagEncontrada tags[];

        //Variável para armazenar a linha do primeiro erro!
        int linhaErro = 0;

        if (comp.getSituacaoAnalise().equals(SituacaoAnalise.AnalisadoComErro)) {

            int count = 0;
            ListaEncadeada<Ocorrencia> lista = new ListaEncadeada<>();

            for (Ocorrencia o : ocorrencias) {

                if (count == 0) {
                    linhaErro = o.getLinha();
                }
                lista.inserir(o);
                count++;
            }

            incializarTabela(lista, "Arquivo análisado com erros!");
            jtbErros.setTitleAt(0, "(" + count + ") Erros");

        } else if (comp.getSituacaoAnalise().equals(SituacaoAnalise.AnalisadoSemErro)) {

            int linhasTb = 1;
            comp.contabilizarTags();
            tags = comp.getTagsEncontradas();

            ListaEncadeada<TagEncontrada> lista = new ListaEncadeada<>();
            NoLista<TagEncontrada> noTag;
            TagEncontrada tag;
            String numeroFormatado;

            for (int i = 0; i < tags.length; i++) {

                tag = new TagEncontrada();
                noTag = new NoLista<>();

                String lida = tags[i].getTag();
                lida = lida.replace(">", " >");

                tag.setTotal(tags[i].getTotal());
                tag.setTag(lida);
                noTag.setInfo(tag);
                lista.inserir(noTag.getInfo());

            }

            incializarTabela("Arquivo análisado sem erros!", lista);
            jtbErros.setTitleAt(0, "Erros");
        }

        try {

            String File = (String) tbArquivos.getValueAt(linhaSelecionada, 1);
            File f = new File(File);
            Scanner scan = new Scanner(f, "UTF-8");

            ListaEncadeada<String> lista = new ListaEncadeada<>();

            int count = 1;
            String linha = "";
            while (scan.hasNext()) {
                linha = new String(count + " " + scan.nextLine());
                lista.inserir(linha);
                count++;
            }

            incializarTabela(lista, linhaErro);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ValidadorHTML.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btValidarArquivoActionPerformed

    /**
     * Inicializa a tabela correspondente as tags encontradas no arquivo, e
     * popula a lista.
     *
     * @param titulo
     * @param lista
     */
    public void incializarTabela(String titulo, ListaEncadeada<TagEncontrada> lista) {
        lbDescErro.setText(titulo);
        if (!lista.estaVazia()) {
            tbTabErros.setModel(new ValidadorTableModel(lista));
            tbTabErros.setDefaultRenderer(Object.class, new ValidadorCellRender());
        }

    }

    /**
     * Inicializa a tabela correspondente ao arquivo HTML, e popula a lista.
     *
     * @param lista
     * @param linhaErro
     */
    public void incializarTabela(ListaEncadeada<String> lista, int linhaErro) {

        if (lista != null) {
            tbHtml.setModel(new ValidadorHTMLTableModel(lista));
            tbHtml.setDefaultRenderer(Object.class, new ValidadorHTMLCellRender(linhaErro));
        }

    }

    /**
     * Iniciliza a tablea correspondente aos erros econtrados no arquivo, e
     * popula a lista com as ocorrências e sugestões.
     *
     * @param lista
     * @param titulo
     */
    public void incializarTabela(ListaEncadeada<Ocorrencia> lista, String titulo) {

        lbDescErro.setText(titulo);

        if (lista.getPrimeiro().getInfo() != null) {
            tbTabErros.setModel(new ValidadorErrosTableModel(lista));
            tbTabErros.setDefaultRenderer(Object.class, new ValidadorErrosCellRender());
            tbTabErros.setBackground(Color.LIGHT_GRAY);
        }

    }

    /**
     * Inicializa a tabela correspondente aos arquivos selecionados para
     * validação.
     *
     * @param lista
     */
    public void incializarTabela(ListaEncadeada<File> lista) {

        if (lista.getPrimeiro().getInfo() != null) {
            tbArquivos.setModel(new ValidadorArquivosTable(lista));
            tbArquivos.setDefaultRenderer(Object.class, new ValidadorArquivosCellRender());
            tbArquivos.setBackground(Color.LIGHT_GRAY);
        }
    }

    /**
     * Recupera o arquivo selecionado na lista e seta no compilador.
     *
     * @param linhaSelecionada
     */
    private void getArquivoSelecionado(int linhaSelecionada) {
        //Inicia instância
        if (linhaSelecionada >= arrFiles.size()) {
            return;
        }

        String file = (String) tbArquivos.getValueAt(tbArquivos.getSelectedRow(), 1);
        File f = new File(file);
        comp = new Compilador(f);
    }
    private void tbArquivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbArquivosMouseClicked
        //Rotina 
    }//GEN-LAST:event_tbArquivosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ValidadorHTML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ValidadorHTML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ValidadorHTML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ValidadorHTML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ValidadorHTML().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSelArquivo;
    private javax.swing.JButton btValidarArquivo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTabbedPane jtbErros;
    private javax.swing.JLabel lbDescErro;
    private javax.swing.JTable tbArquivos;
    private javax.swing.JTable tbHtml;
    private javax.swing.JTable tbTabErros;
    // End of variables declaration//GEN-END:variables
}
